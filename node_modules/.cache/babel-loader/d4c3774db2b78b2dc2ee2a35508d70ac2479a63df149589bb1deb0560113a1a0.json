{"ast":null,"code":"var _jsxFileName = \"/Users/vantai/Learning/programming/react_project/tic-tac-toe/src/App.jsx\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay\n}) {\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next Player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n  const handleClick = i => {\n    if (squares[i] || calculateWinner(squares)) {\n      //If the square at the index i already has data\n      //we return it to prevent overwrite the existing data\n      return;\n      //or if the users already win (calculateWinner function), we return do not perform the tasks below\n    }\n    const nextSquares = squares.slice(); //Create the copy of the squares\n    if (xIsNext) {\n      //if X is the next move, we set the data to X\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    onPlay(nextSquares);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[0],\n        onSquareClick: () => {\n          handleClick(0);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[1],\n        onSquareClick: () => {\n          handleClick(1);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[2],\n        onSquareClick: () => {\n          handleClick(2);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[3],\n        onSquareClick: () => {\n          handleClick(3);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[4],\n        onSquareClick: () => {\n          handleClick(4);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[5],\n        onSquareClick: () => {\n          handleClick(5);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[6],\n        onSquareClick: () => {\n          handleClick(6);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[7],\n        onSquareClick: () => {\n          handleClick(7);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[8],\n        onSquareClick: () => {\n          handleClick(8);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = Board;\nconst calculateWinner = squares => {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    // If the values at indexes a, b, and c are all equal (either \"X\" or \"O\")\n    // and not null, then we have a winner\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n};\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Board","xIsNext","squares","onPlay","winner","calculateWinner","status","handleClick","i","nextSquares","slice","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Square","value","onSquareClick","_c","lines","length","a","b","c","$RefreshReg$"],"sources":["/Users/vantai/Learning/programming/react_project/tic-tac-toe/src/App.jsx"],"sourcesContent":["import { useState } from \"react\";\n\nfunction Board({ xIsNext, squares, onPlay }) {\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next Player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n\n  const handleClick = (i) => {\n    if (squares[i] || calculateWinner(squares)) {\n      //If the square at the index i already has data\n      //we return it to prevent overwrite the existing data\n      return;\n      //or if the users already win (calculateWinner function), we return do not perform the tasks below\n    }\n\n    const nextSquares = squares.slice(); //Create the copy of the squares\n    if (xIsNext) {\n      //if X is the next move, we set the data to X\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n\n    onPlay(nextSquares);\n  };\n\n  return (\n    <>\n      <div className=\"status\">{status}</div>\n      {/* show the status of the game */}\n      <div className=\"board-row\">\n        <Square\n          value={squares[0]}\n          onSquareClick={() => {\n            handleClick(0);\n          }}\n        />\n        <Square\n          value={squares[1]}\n          onSquareClick={() => {\n            handleClick(1);\n          }}\n        />\n        <Square\n          value={squares[2]}\n          onSquareClick={() => {\n            handleClick(2);\n          }}\n        />\n      </div>\n      <div className=\"board-row\">\n        <Square\n          value={squares[3]}\n          onSquareClick={() => {\n            handleClick(3);\n          }}\n        />\n        <Square\n          value={squares[4]}\n          onSquareClick={() => {\n            handleClick(4);\n          }}\n        />\n        <Square\n          value={squares[5]}\n          onSquareClick={() => {\n            handleClick(5);\n          }}\n        />\n      </div>\n      <div className=\"board-row\">\n        <Square\n          value={squares[6]}\n          onSquareClick={() => {\n            handleClick(6);\n          }}\n        />\n        <Square\n          value={squares[7]}\n          onSquareClick={() => {\n            handleClick(7);\n          }}\n        />\n        <Square\n          value={squares[8]}\n          onSquareClick={() => {\n            handleClick(8);\n          }}\n        />\n      </div>\n    </>\n  );\n}\n\nconst calculateWinner = (squares) => {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    // If the values at indexes a, b, and c are all equal (either \"X\" or \"O\")\n    // and not null, then we have a winner\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n};\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,SAASC,KAAKA,CAAC;EAAEC,OAAO;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EAC3C,MAAMC,MAAM,GAAGC,eAAe,CAACH,OAAO,CAAC;EACvC,IAAII,MAAM;EACV,IAAIF,MAAM,EAAE;IACVE,MAAM,GAAG,UAAU,GAAGF,MAAM;EAC9B,CAAC,MAAM;IACLE,MAAM,GAAG,eAAe,IAAIL,OAAO,GAAG,GAAG,GAAG,GAAG,CAAC;EAClD;EAEA,MAAMM,WAAW,GAAIC,CAAC,IAAK;IACzB,IAAIN,OAAO,CAACM,CAAC,CAAC,IAAIH,eAAe,CAACH,OAAO,CAAC,EAAE;MAC1C;MACA;MACA;MACA;IACF;IAEA,MAAMO,WAAW,GAAGP,OAAO,CAACQ,KAAK,CAAC,CAAC,CAAC,CAAC;IACrC,IAAIT,OAAO,EAAE;MACX;MACAQ,WAAW,CAACD,CAAC,CAAC,GAAG,GAAG;IACtB,CAAC,MAAM;MACLC,WAAW,CAACD,CAAC,CAAC,GAAG,GAAG;IACtB;IAEAL,MAAM,CAACM,WAAW,CAAC;EACrB,CAAC;EAED,oBACEZ,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACEd,OAAA;MAAKe,SAAS,EAAC,QAAQ;MAAAD,QAAA,EAAEL;IAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAEtCnB,OAAA;MAAKe,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACxBd,OAAA,CAACoB,MAAM;QACLC,KAAK,EAAEhB,OAAO,CAAC,CAAC,CAAE;QAClBiB,aAAa,EAAEA,CAAA,KAAM;UACnBZ,WAAW,CAAC,CAAC,CAAC;QAChB;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFnB,OAAA,CAACoB,MAAM;QACLC,KAAK,EAAEhB,OAAO,CAAC,CAAC,CAAE;QAClBiB,aAAa,EAAEA,CAAA,KAAM;UACnBZ,WAAW,CAAC,CAAC,CAAC;QAChB;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFnB,OAAA,CAACoB,MAAM;QACLC,KAAK,EAAEhB,OAAO,CAAC,CAAC,CAAE;QAClBiB,aAAa,EAAEA,CAAA,KAAM;UACnBZ,WAAW,CAAC,CAAC,CAAC;QAChB;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNnB,OAAA;MAAKe,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACxBd,OAAA,CAACoB,MAAM;QACLC,KAAK,EAAEhB,OAAO,CAAC,CAAC,CAAE;QAClBiB,aAAa,EAAEA,CAAA,KAAM;UACnBZ,WAAW,CAAC,CAAC,CAAC;QAChB;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFnB,OAAA,CAACoB,MAAM;QACLC,KAAK,EAAEhB,OAAO,CAAC,CAAC,CAAE;QAClBiB,aAAa,EAAEA,CAAA,KAAM;UACnBZ,WAAW,CAAC,CAAC,CAAC;QAChB;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFnB,OAAA,CAACoB,MAAM;QACLC,KAAK,EAAEhB,OAAO,CAAC,CAAC,CAAE;QAClBiB,aAAa,EAAEA,CAAA,KAAM;UACnBZ,WAAW,CAAC,CAAC,CAAC;QAChB;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNnB,OAAA;MAAKe,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACxBd,OAAA,CAACoB,MAAM;QACLC,KAAK,EAAEhB,OAAO,CAAC,CAAC,CAAE;QAClBiB,aAAa,EAAEA,CAAA,KAAM;UACnBZ,WAAW,CAAC,CAAC,CAAC;QAChB;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFnB,OAAA,CAACoB,MAAM;QACLC,KAAK,EAAEhB,OAAO,CAAC,CAAC,CAAE;QAClBiB,aAAa,EAAEA,CAAA,KAAM;UACnBZ,WAAW,CAAC,CAAC,CAAC;QAChB;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFnB,OAAA,CAACoB,MAAM;QACLC,KAAK,EAAEhB,OAAO,CAAC,CAAC,CAAE;QAClBiB,aAAa,EAAEA,CAAA,KAAM;UACnBZ,WAAW,CAAC,CAAC,CAAC;QAChB;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,eACN,CAAC;AAEP;AAACI,EAAA,GA9FQpB,KAAK;AAgGd,MAAMK,eAAe,GAAIH,OAAO,IAAK;EACnC,MAAMmB,KAAK,GAAG,CACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACV;EAED,KAAK,IAAIb,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGa,KAAK,CAACC,MAAM,EAAEd,CAAC,EAAE,EAAE;IACrC,MAAM,CAACe,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,GAAGJ,KAAK,CAACb,CAAC,CAAC;IAC1B;IACA;IACA,IAAIN,OAAO,CAACqB,CAAC,CAAC,IAAIrB,OAAO,CAACqB,CAAC,CAAC,KAAKrB,OAAO,CAACsB,CAAC,CAAC,IAAItB,OAAO,CAACqB,CAAC,CAAC,KAAKrB,OAAO,CAACuB,CAAC,CAAC,EAAE;MACxE,OAAOvB,OAAO,CAACqB,CAAC,CAAC;IACnB;EACF;EACA,OAAO,IAAI;AACb,CAAC;AAAC,IAAAH,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}