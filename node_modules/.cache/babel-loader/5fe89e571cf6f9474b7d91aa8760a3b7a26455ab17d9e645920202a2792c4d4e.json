{"ast":null,"code":"var _jsxFileName = \"/Users/vantai/Learning/programming/react_project/tic-tac-toe/src/App.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  //the xIsNext will be true if the nextMOve is even, and false if the next move is odd\n  const currentSquares = history[currentMove];\n  const handlePlay = nextSquares => {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n    //This setHIstory will create the new array that contains all the items in \"history\"\n    //followed by the nextSquares.\n    //For example, if history is [[null,null,null], [\"X\",null,null]]\n    //and nextSquares is [\"X\",null,\"O\"], then the\n    //new [...history, nextSquares] array will be\n    //[[null,null,null], [\"X\",null,null], [\"X\",null,\"O\"]].\n  };\n  const jumpTo = nextMove => {\n    setCurrentMove(nextMove);\n  };\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = \"Go to move #\" + move;\n    } else {\n      description = \"Go to game start\";\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"list\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"step-button\",\n        onClick: () => {\n          jumpTo(move);\n        },\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"big-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"You are at move \", currentMove, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          xIsNext: xIsNext,\n          squares: currentSquares,\n          onPlay: handlePlay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"xZZdy1/aP1agxyjHn6CL01lXnXc=\");\n_c = Game;\nexport default Game;\nconst Square = ({\n  value,\n  onSquareClick,\n  isWinningSquare\n}) => {\n  if (isWinningSquare) {\n    className = \"winning-square\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onSquareClick,\n    className: `square `,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Square;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay\n}) {\n  const winningSquare = calculateWinner(squares);\n  let status;\n  if (winningSquare) {\n    status = \"Winner: \" + squares[winningSquare[0]];\n  } else {\n    status = \"Next Player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n  const handleClick = i => {\n    if (squares[i] || calculateWinner(squares)) {\n      //If the square at the index i already has data\n      //we return it to prevent overwrite the existing data\n      return;\n      //or if the users already win (calculateWinner function), we return do not perform the tasks below\n    }\n    const nextSquares = squares.slice(); //Create the copy of the squares\n    if (xIsNext) {\n      //if X is the next move, we set the data to X\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    onPlay(nextSquares);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[0],\n        onSquareClick: () => {\n          handleClick(0);\n        },\n        isWinningSquare: winningSquare && winningSquare.includes(0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[1],\n        onSquareClick: () => {\n          handleClick(1);\n        },\n        isWinningSquare: winningSquare && winningSquare.includes(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[2],\n        onSquareClick: () => {\n          handleClick(2);\n        },\n        isWinningSquare: winningSquare && winningSquare.includes(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[3],\n        onSquareClick: () => {\n          handleClick(3);\n        },\n        isWinningSquare: winningSquare && winningSquare.includes(3)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[4],\n        onSquareClick: () => {\n          handleClick(4);\n        },\n        isWinningSquare: winningSquare && winningSquare.includes(4)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[5],\n        onSquareClick: () => {\n          handleClick(5);\n        },\n        isWinningSquare: winningSquare && winningSquare.includes(5)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[6],\n        onSquareClick: () => {\n          handleClick(6);\n        },\n        isWinningSquare: winningSquare && winningSquare.includes(6)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[7],\n        onSquareClick: () => {\n          handleClick(7);\n        },\n        isWinningSquare: winningSquare && winningSquare.includes(7)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[8],\n        onSquareClick: () => {\n          handleClick(8);\n        },\n        isWinningSquare: winningSquare && winningSquare.includes(8)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c3 = Board;\nconst calculateWinner = squares => {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    // If the values at indexes a, b, and c are all equal (either \"X\" or \"O\")\n    // and not null, then we have a winner\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      const winningSquare = [a, b, c];\n      return winningSquare;\n    }\n  }\n  return null;\n};\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Game\");\n$RefreshReg$(_c2, \"Square\");\n$RefreshReg$(_c3, \"Board\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","history","setHistory","Array","fill","currentMove","setCurrentMove","xIsNext","currentSquares","handlePlay","nextSquares","nextHistory","slice","length","jumpTo","nextMove","moves","map","squares","move","description","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Board","onPlay","_c","Square","value","onSquareClick","isWinningSquare","_c2","winningSquare","calculateWinner","status","handleClick","i","includes","_c3","lines","a","b","c","$RefreshReg$"],"sources":["/Users/vantai/Learning/programming/react_project/tic-tac-toe/src/App.jsx"],"sourcesContent":["import { useState } from \"react\";\n\nconst Game = () => {\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  //the xIsNext will be true if the nextMOve is even, and false if the next move is odd\n  const currentSquares = history[currentMove];\n\n  const handlePlay = (nextSquares) => {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n    //This setHIstory will create the new array that contains all the items in \"history\"\n    //followed by the nextSquares.\n    //For example, if history is [[null,null,null], [\"X\",null,null]]\n    //and nextSquares is [\"X\",null,\"O\"], then the\n    //new [...history, nextSquares] array will be\n    //[[null,null,null], [\"X\",null,null], [\"X\",null,\"O\"]].\n  };\n\n  const jumpTo = (nextMove) => {\n    setCurrentMove(nextMove);\n  };\n\n  const moves = history.map((squares, move) => {\n    let description;\n\n    if (move > 0) {\n      description = \"Go to move #\" + move;\n    } else {\n      description = \"Go to game start\";\n    }\n\n    return (\n      <li key={move} className=\"list\">\n        <button\n          className=\"step-button\"\n          onClick={() => {\n            jumpTo(move);\n          }}\n        >\n          {description}\n        </button>\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"big-div\">\n      <h3>You are at move {currentMove} </h3>\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            xIsNext={xIsNext}\n            squares={currentSquares}\n            onPlay={handlePlay}\n          />\n        </div>\n        <div className=\"game-info\">\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Game;\n\nconst Square = ({ value, onSquareClick, isWinningSquare }) => {\n  if (isWinningSquare) {\n    className = \"winning-square\"\n  }\n  return (\n    <button onClick={onSquareClick} className={`square ` } >\n      {value}\n    </button>\n  );\n};\n\nfunction Board({ xIsNext, squares, onPlay }) {\n  const winningSquare = calculateWinner(squares);\n\n  let status;\n  if (winningSquare) {\n    status = \"Winner: \" + squares[winningSquare[0]];\n  } else {\n    status = \"Next Player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n\n  const handleClick = (i) => {\n    if (squares[i] || calculateWinner(squares)) {\n      //If the square at the index i already has data\n      //we return it to prevent overwrite the existing data\n      return;\n      //or if the users already win (calculateWinner function), we return do not perform the tasks below\n    }\n\n    const nextSquares = squares.slice(); //Create the copy of the squares\n    if (xIsNext) {\n      //if X is the next move, we set the data to X\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n\n    onPlay(nextSquares);\n  };\n\n\n\n  return (\n    <>\n      <div className=\"status\">{status}</div>\n      {/* show the status of the game */}\n      <div className=\"board-row\">\n        <Square\n          value={squares[0]}\n          onSquareClick={() => {\n            handleClick(0);\n          }}\n          isWinningSquare={winningSquare && winningSquare.includes(0)}\n        />\n        <Square\n          value={squares[1]}\n          onSquareClick={() => {\n            handleClick(1);\n          }}\n          isWinningSquare={winningSquare && winningSquare.includes(1)}\n        />\n        <Square\n          value={squares[2]}\n          onSquareClick={() => {\n            handleClick(2);\n          }}\n          isWinningSquare={winningSquare && winningSquare.includes(2)}\n        />\n      </div>\n      <div className=\"board-row\">\n        <Square\n          value={squares[3]}\n          onSquareClick={() => {\n            handleClick(3);\n          }}\n          isWinningSquare={winningSquare && winningSquare.includes(3)}\n        />\n        <Square\n          value={squares[4]}\n          onSquareClick={() => {\n            handleClick(4);\n          }}\n          isWinningSquare={winningSquare && winningSquare.includes(4)}\n        />\n        <Square\n          value={squares[5]}\n          onSquareClick={() => {\n            handleClick(5);\n          }}\n          isWinningSquare={winningSquare && winningSquare.includes(5)}\n        />\n      </div>\n      <div className=\"board-row\">\n        <Square\n          value={squares[6]}\n          onSquareClick={() => {\n            handleClick(6);\n          }}\n          isWinningSquare={winningSquare && winningSquare.includes(6)}\n        />\n        <Square\n          value={squares[7]}\n          onSquareClick={() => {\n            handleClick(7);\n          }}\n          isWinningSquare={winningSquare && winningSquare.includes(7)}\n        />\n        <Square\n          value={squares[8]}\n          onSquareClick={() => {\n            handleClick(8);\n          }}\n          isWinningSquare={winningSquare && winningSquare.includes(8)}\n        />\n      </div>\n    </>\n  );\n}\n\nconst calculateWinner = (squares) => {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    // If the values at indexes a, b, and c are all equal (either \"X\" or \"O\")\n    // and not null, then we have a winner\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      const winningSquare = [a, b, c];\n\n      return winningSquare;\n    }\n  }\n  return null;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}