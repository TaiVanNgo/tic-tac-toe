{"ast":null,"code":"var _jsxFileName = \"/Users/vantai/Learning/programming/react_project/tic-tac-toe/src/App.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [xIsNext, setXIsNext] = useState(true);\n  const [history, setHistory] = useState(Array(9).fill(null));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"qNUxRnMid7uhXKvajLD0CBpYM0Q=\");\n_c = Game;\nexport default Game;\nconst Square = ({\n  value,\n  onSquareClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onSquareClick,\n    className: \"square\",\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Square;\nfunction Board() {\n  _s2();\n  const [xIsNext, setXIsNext] = useState(true);\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next Player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n  const handleClick = i => {\n    if (squares[i] || calculateWinner(squares)) {\n      //If the square at the index i already has data\n      //we return it to prevent overwrite the existing data\n      return;\n      //or if the users already win (calculateWinner function), we return do not perform the tasks below\n    }\n    const copySquares = squares.slice(); //Create the copy of the squares\n    if (xIsNext) {\n      //if X is the next move, we set the data to X\n      copySquares[i] = \"X\";\n    } else {\n      copySquares[i] = \"O\";\n    }\n    setSquares(copySquares); //set the squares\n    setXIsNext(!xIsNext); //Use the xIsnext become viceversa with the current\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[0],\n        onSquareClick: () => {\n          handleClick(0);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[1],\n        onSquareClick: () => {\n          handleClick(1);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[2],\n        onSquareClick: () => {\n          handleClick(2);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[3],\n        onSquareClick: () => {\n          handleClick(3);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[4],\n        onSquareClick: () => {\n          handleClick(4);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[5],\n        onSquareClick: () => {\n          handleClick(5);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[6],\n        onSquareClick: () => {\n          handleClick(6);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[7],\n        onSquareClick: () => {\n          handleClick(7);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[8],\n        onSquareClick: () => {\n          handleClick(8);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s2(Board, \"coMecpjTzg1W7KUe5tSm+DrcByQ=\");\n_c3 = Board;\nconst calculateWinner = squares => {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    // If the values at indexes a, b, and c are all equal (either \"X\" or \"O\")\n    // and not null, then we have a winner\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n    return null;\n  }\n};\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Game\");\n$RefreshReg$(_c2, \"Square\");\n$RefreshReg$(_c3, \"Board\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","xIsNext","setXIsNext","history","setHistory","Array","fill","className","children","Board","fileName","_jsxFileName","lineNumber","columnNumber","_c","Square","value","onSquareClick","onClick","_c2","_s2","squares","setSquares","winner","calculateWinner","status","handleClick","i","copySquares","slice","_c3","lines","length","a","b","c","$RefreshReg$"],"sources":["/Users/vantai/Learning/programming/react_project/tic-tac-toe/src/App.jsx"],"sourcesContent":["import { useState } from \"react\";\n\nconst Game = () => {\n  const [xIsNext, setXIsNext] = useState(true);\n  const [history, setHistory] = useState(Array(9).fill(null));\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board />\n      </div>\n      <div className=\"game-info\">\n        <ol></ol>\n      </div>\n    </div>\n  );\n};\nexport default Game;\n\nconst Square = ({ value, onSquareClick }) => {\n  return (\n    <button onClick={onSquareClick} className=\"square\">\n      {value}\n    </button>\n  );\n};\n\nfunction Board() {\n  const [xIsNext, setXIsNext] = useState(true);\n  const [squares, setSquares] = useState(Array(9).fill(null));\n\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next Player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n\n  const handleClick = (i) => {\n    if (squares[i] || calculateWinner(squares)) {\n      //If the square at the index i already has data\n      //we return it to prevent overwrite the existing data\n      return;\n      //or if the users already win (calculateWinner function), we return do not perform the tasks below\n    }\n\n    const copySquares = squares.slice(); //Create the copy of the squares\n    if (xIsNext) {\n      //if X is the next move, we set the data to X\n      copySquares[i] = \"X\";\n    } else {\n      copySquares[i] = \"O\";\n    }\n\n    setSquares(copySquares); //set the squares\n    setXIsNext(!xIsNext); //Use the xIsnext become viceversa with the current\n  };\n\n  return (\n    <>\n      <div className=\"status\">{status}</div>\n      {/* show the status of the game */}\n      <div className=\"board-row\">\n        <Square\n          value={squares[0]}\n          onSquareClick={() => {\n            handleClick(0);\n          }}\n        />\n        <Square\n          value={squares[1]}\n          onSquareClick={() => {\n            handleClick(1);\n          }}\n        />\n        <Square\n          value={squares[2]}\n          onSquareClick={() => {\n            handleClick(2);\n          }}\n        />\n      </div>\n      <div className=\"board-row\">\n        <Square\n          value={squares[3]}\n          onSquareClick={() => {\n            handleClick(3);\n          }}\n        />\n        <Square\n          value={squares[4]}\n          onSquareClick={() => {\n            handleClick(4);\n          }}\n        />\n        <Square\n          value={squares[5]}\n          onSquareClick={() => {\n            handleClick(5);\n          }}\n        />\n      </div>\n      <div className=\"board-row\">\n        <Square\n          value={squares[6]}\n          onSquareClick={() => {\n            handleClick(6);\n          }}\n        />\n        <Square\n          value={squares[7]}\n          onSquareClick={() => {\n            handleClick(7);\n          }}\n        />\n        <Square\n          value={squares[8]}\n          onSquareClick={() => {\n            handleClick(8);\n          }}\n        />\n      </div>\n    </>\n  );\n}\n\nconst calculateWinner = (squares) => {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    // If the values at indexes a, b, and c are all equal (either \"X\" or \"O\")\n    // and not null, then we have a winner\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n\n    return null;\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}