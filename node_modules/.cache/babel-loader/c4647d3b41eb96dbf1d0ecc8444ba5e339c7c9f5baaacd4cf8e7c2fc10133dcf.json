{"ast":null,"code":"var _jsxFileName = \"/Users/vantai/Learning/programming/react_project/tic-tac-toe/src/App.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [xIsNext, setXIsNext] = useState(true);\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const currentSquares = history[history.length - 1];\n  const handlePlay = nextSquares => {\n    setHistory([...history, nextSquares]);\n    //This setHIstory will create the new array that contains all the items in \"history\"\n    //followed by the nextSquares.\n    //For example, if history is [[null,null,null], [\"X\",null,null]]\n    //and nextSquares is [\"X\",null,\"O\"], then the\n    //new [...history, nextSquares] array will be\n    //[[null,null,null], [\"X\",null,null], [\"X\",null,\"O\"]].\n\n    setXIsNext(!xIsNext);\n  };\n  const jumpTo = nextMove => {};\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = 'Go to move #' + move;\n    } else {\n      description = 'Go to game start';\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"SgYnsXT3crq7e7AVQFAc92TDVPk=\");\n_c = Game;\nexport default Game;\nconst Square = ({\n  value,\n  onSquareClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onSquareClick,\n    className: \"square\",\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Square;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay\n}) {\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next Player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n  const handleClick = i => {\n    if (squares[i] || calculateWinner(squares)) {\n      //If the square at the index i already has data\n      //we return it to prevent overwrite the existing data\n      return;\n      //or if the users already win (calculateWinner function), we return do not perform the tasks below\n    }\n    const nextSquares = squares.slice(); //Create the copy of the squares\n    if (xIsNext) {\n      //if X is the next move, we set the data to X\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    onPlay(nextSquares);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[0],\n        onSquareClick: () => {\n          handleClick(0);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[1],\n        onSquareClick: () => {\n          handleClick(1);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[2],\n        onSquareClick: () => {\n          handleClick(2);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[3],\n        onSquareClick: () => {\n          handleClick(3);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[4],\n        onSquareClick: () => {\n          handleClick(4);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[5],\n        onSquareClick: () => {\n          handleClick(5);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[6],\n        onSquareClick: () => {\n          handleClick(6);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[7],\n        onSquareClick: () => {\n          handleClick(7);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[8],\n        onSquareClick: () => {\n          handleClick(8);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c3 = Board;\nconst calculateWinner = squares => {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    // If the values at indexes a, b, and c are all equal (either \"X\" or \"O\")\n    // and not null, then we have a winner\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n};\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Game\");\n$RefreshReg$(_c2, \"Square\");\n$RefreshReg$(_c3, \"Board\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","xIsNext","setXIsNext","history","setHistory","Array","fill","currentSquares","length","handlePlay","nextSquares","jumpTo","nextMove","moves","map","squares","move","description","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Board","onPlay","_c","Square","value","onSquareClick","onClick","_c2","winner","calculateWinner","status","handleClick","i","slice","_c3","lines","a","b","c","$RefreshReg$"],"sources":["/Users/vantai/Learning/programming/react_project/tic-tac-toe/src/App.jsx"],"sourcesContent":["import { useState } from \"react\";\n\nconst Game = () => {\n  const [xIsNext, setXIsNext] = useState(true);\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const currentSquares = history[history.length - 1];\n\n  const handlePlay = (nextSquares) => {\n    setHistory([...history, nextSquares]);\n    //This setHIstory will create the new array that contains all the items in \"history\"\n    //followed by the nextSquares.\n    //For example, if history is [[null,null,null], [\"X\",null,null]]\n    //and nextSquares is [\"X\",null,\"O\"], then the\n    //new [...history, nextSquares] array will be\n    //[[null,null,null], [\"X\",null,null], [\"X\",null,\"O\"]].\n\n    setXIsNext(!xIsNext);\n  };\n\n  const jumpTo = (nextMove) => {};\n\n  const moves = history.map( (squares, move) => {\n    let description;\n\n    if(move > 0){\n      description = 'Go to move #' + move;\n    } else{\n      description = 'Go to game start';\n    }\n\n    return(\n      <li>\n        <button></button>\n      </li>\n    )\n  })\n\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} />\n      </div>\n      <div className=\"game-info\">\n        <ol></ol>\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n\nconst Square = ({ value, onSquareClick }) => {\n  return (\n    <button onClick={onSquareClick} className=\"square\">\n      {value}\n    </button>\n  );\n};\n\nfunction Board({ xIsNext, squares, onPlay }) {\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next Player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n\n  const handleClick = (i) => {\n    if (squares[i] || calculateWinner(squares)) {\n      //If the square at the index i already has data\n      //we return it to prevent overwrite the existing data\n      return;\n      //or if the users already win (calculateWinner function), we return do not perform the tasks below\n    }\n\n    const nextSquares = squares.slice(); //Create the copy of the squares\n    if (xIsNext) {\n      //if X is the next move, we set the data to X\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n\n    onPlay(nextSquares);\n  };\n\n  return (\n    <>\n      <div className=\"status\">{status}</div>\n      {/* show the status of the game */}\n      <div className=\"board-row\">\n        <Square\n          value={squares[0]}\n          onSquareClick={() => {\n            handleClick(0);\n          }}\n        />\n        <Square\n          value={squares[1]}\n          onSquareClick={() => {\n            handleClick(1);\n          }}\n        />\n        <Square\n          value={squares[2]}\n          onSquareClick={() => {\n            handleClick(2);\n          }}\n        />\n      </div>\n      <div className=\"board-row\">\n        <Square\n          value={squares[3]}\n          onSquareClick={() => {\n            handleClick(3);\n          }}\n        />\n        <Square\n          value={squares[4]}\n          onSquareClick={() => {\n            handleClick(4);\n          }}\n        />\n        <Square\n          value={squares[5]}\n          onSquareClick={() => {\n            handleClick(5);\n          }}\n        />\n      </div>\n      <div className=\"board-row\">\n        <Square\n          value={squares[6]}\n          onSquareClick={() => {\n            handleClick(6);\n          }}\n        />\n        <Square\n          value={squares[7]}\n          onSquareClick={() => {\n            handleClick(7);\n          }}\n        />\n        <Square\n          value={squares[8]}\n          onSquareClick={() => {\n            handleClick(8);\n          }}\n        />\n      </div>\n    </>\n  );\n}\n\nconst calculateWinner = (squares) => {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    // If the values at indexes a, b, and c are all equal (either \"X\" or \"O\")\n    // and not null, then we have a winner\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}